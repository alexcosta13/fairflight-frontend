{"ast":null,"code":"var mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nmongoose.connect(\"mongodb://fairflight-mongo:oJQdgXjpwcf5nL7MJ38tY6B1rs4AZH2T1wr4TErRdGaPGMyZsrkaBRQtgg48fkiEAdirwDNUqDoVJg3lVudp6A%3D%3D@fairflight-mongo.documents.azure.com:10255/?ssl=true\").then(function () {\n  console.log(\"Successfully conected to mongodb\");\n});\nvar flightSchema = new Schema({\n  id: String,\n  departure: String,\n  arrival: String,\n  from: String,\n  to: String,\n  date: String,\n  price: Number,\n  airline: String\n});\nvar flightModel = mongoose.model('buylist', flightSchema);\n\nfunction get() {\n  var docquery = Hero.find({}).read(ReadPreference.NEAREST);\n  docquery.exec().then(function (heroes) {\n    res.json(heroes);\n  }).catch(function (err) {\n    res.status(500).send(err);\n  });\n}\n\nmodule.exports = {\n  flightModel: flightModel,\n  get: get\n};","map":{"version":3,"sources":["/Users/alexcosta/Desktop/fairflight/src/mongoDB/flightlist.js"],"names":["mongoose","require","Schema","connect","then","console","log","flightSchema","id","String","departure","arrival","from","to","date","price","Number","airline","flightModel","model","get","docquery","Hero","find","read","ReadPreference","NEAREST","exec","heroes","res","json","catch","err","status","send","module","exports"],"mappings":"AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEAF,QAAQ,CAACG,OAAT,CAAiB,8KAAjB,EACGC,IADH,CACQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,CAHH;AAMA,IAAMC,YAAY,GAAG,IAAIL,MAAJ,CACnB;AACAM,EAAAA,EAAE,EAAGC,MADL;AAEAC,EAAAA,SAAS,EAAED,MAFX;AAGAE,EAAAA,OAAO,EAAIF,MAHX;AAIAG,EAAAA,IAAI,EAAIH,MAJR;AAKAI,EAAAA,EAAE,EAAIJ,MALN;AAMAK,EAAAA,IAAI,EAAIL,MANR;AAOAM,EAAAA,KAAK,EAAIC,MAPT;AAQAC,EAAAA,OAAO,EAAER;AART,CADmB,CAArB;AAaA,IAAMS,WAAW,GAAGlB,QAAQ,CAACmB,KAAT,CAAe,SAAf,EAA0BZ,YAA1B,CAApB;;AAEA,SAASa,GAAT,GAAe;AACb,MAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAU,EAAV,EAAcC,IAAd,CAAmBC,cAAc,CAACC,OAAlC,CAAjB;AACAL,EAAAA,QAAQ,CACLM,IADH,GAEGvB,IAFH,CAEQ,UAAAwB,MAAM,EAAI;AACdC,IAAAA,GAAG,CAACC,IAAJ,CAASF,MAAT;AACD,GAJH,EAKGG,KALH,CAKS,UAAAC,GAAG,EAAI;AACZH,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB;AACD,GAPH;AAQD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AAAClB,EAAAA,WAAW,EAAXA,WAAD;AAAcE,EAAAA,GAAG,EAAHA;AAAd,CAAjB","sourcesContent":["const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\nmongoose.connect(\"mongodb://fairflight-mongo:oJQdgXjpwcf5nL7MJ38tY6B1rs4AZH2T1wr4TErRdGaPGMyZsrkaBRQtgg48fkiEAdirwDNUqDoVJg3lVudp6A%3D%3D@fairflight-mongo.documents.azure.com:10255/?ssl=true\")\n  .then(() => {\n    console.log(\"Successfully conected to mongodb\")\n  })\n\n\nconst flightSchema = new Schema(\n  {\n  id:  String,\n  departure: String,\n  arrival:   String,\n  from:   String,\n  to:   String,\n  date:   String,\n  price:   Number,\n  airline: String  \n  }\n);\n\nconst flightModel = mongoose.model('buylist', flightSchema)\n\nfunction get() {\n  const docquery = Hero.find({}).read(ReadPreference.NEAREST);\n  docquery\n    .exec()\n    .then(heroes => {\n      res.json(heroes);\n    })\n    .catch(err => {\n      res.status(500).send(err);\n    });\n}\n\nmodule.exports = {flightModel, get} "]},"metadata":{},"sourceType":"module"}