{"ast":null,"code":"import _classCallCheck from \"/Users/alexcosta/Desktop/fairflight/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexcosta/Desktop/fairflight/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexcosta/Desktop/fairflight/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexcosta/Desktop/fairflight/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexcosta/Desktop/fairflight/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexcosta/Desktop/fairflight/src/containers/Buy.js\";\nimport React, { Component } from 'react';\nimport { Header, Table } from 'semantic-ui-react';\n\nvar MyFlights =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyFlights, _Component);\n\n  function MyFlights() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyFlights);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyFlights)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(MyFlights, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var MongoClient = require('mongodb').MongoClient;\n\n      var assert = require('assert');\n\n      var ObjectId = require('mongodb').ObjectID;\n\n      var url = 'mongodb://<username>:<password>@<endpoint>.documents.azure.com:10255/?ssl=true';\n\n      var insertDocument = function insertDocument(db, callback) {\n        db.collection('families').insertOne({\n          \"id\": \"AndersenFamily\",\n          \"lastName\": \"Andersen\",\n          \"parents\": [{\n            \"firstName\": \"Thomas\"\n          }, {\n            \"firstName\": \"Mary Kay\"\n          }],\n          \"children\": [{\n            \"firstName\": \"John\",\n            \"gender\": \"male\",\n            \"grade\": 7\n          }],\n          \"pets\": [{\n            \"givenName\": \"Fluffy\"\n          }],\n          \"address\": {\n            \"country\": \"USA\",\n            \"state\": \"WA\",\n            \"city\": \"Seattle\"\n          }\n        }, function (err, result) {\n          assert.equal(err, null);\n          console.log(\"Inserted a document into the families collection.\");\n          callback();\n        });\n      };\n\n      var findFamilies = function findFamilies(db, callback) {\n        var cursor = db.collection('families').find();\n        cursor.each(function (err, doc) {\n          assert.equal(err, null);\n\n          if (doc != null) {\n            console.dir(doc);\n          } else {\n            callback();\n          }\n        });\n      };\n\n      var updateFamilies = function updateFamilies(db, callback) {\n        db.collection('families').updateOne({\n          \"lastName\": \"Andersen\"\n        }, {\n          $set: {\n            \"pets\": [{\n              \"givenName\": \"Fluffy\"\n            }, {\n              \"givenName\": \"Rocky\"\n            }]\n          },\n          $currentDate: {\n            \"lastModified\": true\n          }\n        }, function (err, results) {\n          console.log(results);\n          callback();\n        });\n      };\n\n      var removeFamilies = function removeFamilies(db, callback) {\n        db.collection('families').deleteMany({\n          \"lastName\": \"Andersen\"\n        }, function (err, results) {\n          console.log(results);\n          callback();\n        });\n      };\n\n      MongoClient.connect(url, function (err, client) {\n        assert.equal(null, err);\n        var db = client.db('familiesdb');\n        insertDocument(db, function () {\n          findFamilies(db, function () {\n            updateFamilies(db, function () {\n              removeFamilies(db, function () {\n                client.close();\n              });\n            });\n          });\n        });\n      });\n      /*\n      // when component mounted, start a GET request\n      // to specified URL\n      fetch(URL_TO_FETCH)\n      // when we get a response map the body to json\n      .then(response => response.json())\n      // and update the state data to said json\n      .then(data => this.setState({ data }));*/\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Available flights\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Please, select your flight\"), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"From\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"To\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Departure\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Arrival\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Price\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.data.map(function (flight) {\n        return React.createElement(Table.Row, {\n          key: flight.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, flight.from), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, flight.to), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, flight.departure), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, flight.arrival), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, flight.price));\n      }))));\n    }\n  }]);\n\n  return MyFlights;\n}(Component);\n\nexport default MyFlights;","map":{"version":3,"sources":["/Users/alexcosta/Desktop/fairflight/src/containers/Buy.js"],"names":["React","Component","Header","Table","MyFlights","state","data","MongoClient","require","assert","ObjectId","ObjectID","url","insertDocument","db","callback","collection","insertOne","err","result","equal","console","log","findFamilies","cursor","find","each","doc","dir","updateFamilies","updateOne","$set","$currentDate","results","removeFamilies","deleteMany","connect","client","close","map","flight","id","from","to","departure","arrival","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Header,\n    Table,\n  } from 'semantic-ui-react' \n\n\nclass MyFlights extends Component {\n    state = { data: [] };\n\n    componentDidMount() {\n        var MongoClient = require('mongodb').MongoClient;\nvar assert = require('assert');\nvar ObjectId = require('mongodb').ObjectID;\nvar url = 'mongodb://<username>:<password>@<endpoint>.documents.azure.com:10255/?ssl=true';\n\nvar insertDocument = function(db, callback) {\ndb.collection('families').insertOne( {\n        \"id\": \"AndersenFamily\",\n        \"lastName\": \"Andersen\",\n        \"parents\": [\n            { \"firstName\": \"Thomas\" },\n            { \"firstName\": \"Mary Kay\" }\n        ],\n        \"children\": [\n            { \"firstName\": \"John\", \"gender\": \"male\", \"grade\": 7 }\n        ],\n        \"pets\": [\n            { \"givenName\": \"Fluffy\" }\n        ],\n        \"address\": { \"country\": \"USA\", \"state\": \"WA\", \"city\": \"Seattle\" }\n    }, function(err, result) {\n    assert.equal(err, null);\n    console.log(\"Inserted a document into the families collection.\");\n    callback();\n});\n};\n\nvar findFamilies = function(db, callback) {\nvar cursor =db.collection('families').find( );\ncursor.each(function(err, doc) {\n    assert.equal(err, null);\n    if (doc != null) {\n        console.dir(doc);\n    } else {\n        callback();\n    }\n});\n};\n\nvar updateFamilies = function(db, callback) {\ndb.collection('families').updateOne(\n    { \"lastName\" : \"Andersen\" },\n    {\n        $set: { \"pets\": [\n            { \"givenName\": \"Fluffy\" },\n            { \"givenName\": \"Rocky\"}\n        ] },\n        $currentDate: { \"lastModified\": true }\n    }, function(err, results) {\n    console.log(results);\n    callback();\n});\n};\n\nvar removeFamilies = function(db, callback) {\ndb.collection('families').deleteMany(\n    { \"lastName\": \"Andersen\" },\n    function(err, results) {\n        console.log(results);\n        callback();\n    }\n);\n};\n\nMongoClient.connect(url, function(err, client) {\nassert.equal(null, err);\nvar db = client.db('familiesdb');\ninsertDocument(db, function() {\n    findFamilies(db, function() {\n    updateFamilies(db, function() {\n        removeFamilies(db, function() {\n            client.close();\n        });\n    });\n    });\n});\n});\n\n\n        /*\n        // when component mounted, start a GET request\n        // to specified URL\n        fetch(URL_TO_FETCH)\n        // when we get a response map the body to json\n        .then(response => response.json())\n        // and update the state data to said json\n        .then(data => this.setState({ data }));*/\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Header as='h1'>Available flights</Header>\n                <p>Please, select your flight</p>\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>From</Table.HeaderCell>\n                            <Table.HeaderCell>To</Table.HeaderCell>\n                            <Table.HeaderCell>Departure</Table.HeaderCell>\n                            <Table.HeaderCell>Arrival</Table.HeaderCell>\n                            <Table.HeaderCell>Price</Table.HeaderCell>\n\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        { this.state.data.map(function(flight){\n                            return (\n                                <Table.Row key={flight.id}>\n                                    <Table.Cell>{flight.from}</Table.Cell>\n                                    <Table.Cell>{flight.to}</Table.Cell>\n                                    <Table.Cell>{flight.departure}</Table.Cell>\n                                    <Table.Cell>{flight.arrival}</Table.Cell>\n                                    <Table.Cell>{flight.price}</Table.Cell>\n                                </Table.Row>);\n                        }) }\n                    </Table.Body>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default MyFlights"]},"metadata":{},"sourceType":"module"}