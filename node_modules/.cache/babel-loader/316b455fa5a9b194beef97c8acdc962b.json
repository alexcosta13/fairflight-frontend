{"ast":null,"code":"import _classCallCheck from \"/Users/alexcosta/Desktop/fairflight/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexcosta/Desktop/fairflight/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexcosta/Desktop/fairflight/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexcosta/Desktop/fairflight/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexcosta/Desktop/fairflight/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexcosta/Desktop/fairflight/src/containers/Buy.js\";\nimport React, { Component } from 'react';\nimport { Header, Table } from 'semantic-ui-react';\n\nvar MyFlights =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyFlights, _Component);\n\n  function MyFlights() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyFlights);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyFlights)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(MyFlights, [{\n    key: \"render\",\n\n    /*componentDidMount() {\n        var MongoClient = require('mongodb').MongoClient;\n    var assert = require('assert');\n    var ObjectId = require('mongodb').ObjectID;\n    var url = 'mongodb://<username>:<password>@<endpoint>.documents.azure.com:10255/?ssl=true';\n    var insertDocument = function(db, callback) {\n    db.collection('families').insertOne( {\n        \"id\": \"AndersenFamily\",\n        \"lastName\": \"Andersen\",\n        \"parents\": [\n            { \"firstName\": \"Thomas\" },\n            { \"firstName\": \"Mary Kay\" }\n        ],\n        \"children\": [\n            { \"firstName\": \"John\", \"gender\": \"male\", \"grade\": 7 }\n        ],\n        \"pets\": [\n            { \"givenName\": \"Fluffy\" }\n        ],\n        \"address\": { \"country\": \"USA\", \"state\": \"WA\", \"city\": \"Seattle\" }\n    }, function(err, result) {\n    assert.equal(err, null);\n    console.log(\"Inserted a document into the families collection.\");\n    callback();\n    });\n    };\n    var findFamilies = function(db, callback) {\n    var cursor =db.collection('families').find( );\n    cursor.each(function(err, doc) {\n    assert.equal(err, null);\n    if (doc != null) {\n        console.dir(doc);\n    } else {\n        callback();\n    }\n    });\n    };\n    var updateFamilies = function(db, callback) {\n    db.collection('families').updateOne(\n    { \"lastName\" : \"Andersen\" },\n    {\n        $set: { \"pets\": [\n            { \"givenName\": \"Fluffy\" },\n            { \"givenName\": \"Rocky\"}\n        ] },\n        $currentDate: { \"lastModified\": true }\n    }, function(err, results) {\n    console.log(results);\n    callback();\n    });\n    };\n    var removeFamilies = function(db, callback) {\n    db.collection('families').deleteMany(\n    { \"lastName\": \"Andersen\" },\n    function(err, results) {\n        console.log(results);\n        callback();\n    }\n    );\n    };\n    MongoClient.connect(url, function(err, client) {\n    assert.equal(null, err);\n    var db = client.db('familiesdb');\n    insertDocument(db, function() {\n    findFamilies(db, function() {\n    updateFamilies(db, function() {\n        removeFamilies(db, function() {\n            client.close();\n        });\n    });\n    });\n    });\n    });\n          /*\n        // when component mounted, start a GET request\n        // to specified URL\n        fetch(URL_TO_FETCH)\n        // when we get a response map the body to json\n        .then(response => response.json())\n        // and update the state data to said json\n        .then(data => this.setState({ data }));\n    }*/\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Available flights\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Please, select your flight\"), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"From\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"To\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Departure\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Arrival\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Price\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.data.map(function (flight) {\n        return React.createElement(Table.Row, {\n          key: flight.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, flight.from), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, flight.to), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, flight.departure), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, flight.arrival), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, flight.price));\n      }))));\n    }\n  }]);\n\n  return MyFlights;\n}(Component);\n\nexport default MyFlights;","map":{"version":3,"sources":["/Users/alexcosta/Desktop/fairflight/src/containers/Buy.js"],"names":["React","Component","Header","Table","MyFlights","state","data","map","flight","id","from","to","departure","arrival","price"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EAEIC,KAFJ,QAGS,mBAHT;;IAMMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AAAEC,MAAAA,IAAI,EAAE;AAAR,K;;;;;;;AAER;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BA2FS;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,EAGI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAII,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,CADJ,CADJ,EAWI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,UAASC,MAAT,EAAgB;AAClC,eACI,oBAAC,KAAD,CAAO,GAAP;AAAW,UAAA,GAAG,EAAEA,MAAM,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaD,MAAM,CAACE,IAApB,CADJ,EAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaF,MAAM,CAACG,EAApB,CAFJ,EAGI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaH,MAAM,CAACI,SAApB,CAHJ,EAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaJ,MAAM,CAACK,OAApB,CAJJ,EAKI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaL,MAAM,CAACM,KAApB,CALJ,CADJ;AAQH,OATC,CADN,CAXJ,CAHJ,CADJ;AA8BH;;;;EA7HmBb,S;;AAgIxB,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Header,\n    Table,\n  } from 'semantic-ui-react' \n\n\nclass MyFlights extends Component {\n    state = { data: [] };\n\n    /*componentDidMount() {\n        var MongoClient = require('mongodb').MongoClient;\nvar assert = require('assert');\nvar ObjectId = require('mongodb').ObjectID;\nvar url = 'mongodb://<username>:<password>@<endpoint>.documents.azure.com:10255/?ssl=true';\n\nvar insertDocument = function(db, callback) {\ndb.collection('families').insertOne( {\n        \"id\": \"AndersenFamily\",\n        \"lastName\": \"Andersen\",\n        \"parents\": [\n            { \"firstName\": \"Thomas\" },\n            { \"firstName\": \"Mary Kay\" }\n        ],\n        \"children\": [\n            { \"firstName\": \"John\", \"gender\": \"male\", \"grade\": 7 }\n        ],\n        \"pets\": [\n            { \"givenName\": \"Fluffy\" }\n        ],\n        \"address\": { \"country\": \"USA\", \"state\": \"WA\", \"city\": \"Seattle\" }\n    }, function(err, result) {\n    assert.equal(err, null);\n    console.log(\"Inserted a document into the families collection.\");\n    callback();\n});\n};\n\nvar findFamilies = function(db, callback) {\nvar cursor =db.collection('families').find( );\ncursor.each(function(err, doc) {\n    assert.equal(err, null);\n    if (doc != null) {\n        console.dir(doc);\n    } else {\n        callback();\n    }\n});\n};\n\nvar updateFamilies = function(db, callback) {\ndb.collection('families').updateOne(\n    { \"lastName\" : \"Andersen\" },\n    {\n        $set: { \"pets\": [\n            { \"givenName\": \"Fluffy\" },\n            { \"givenName\": \"Rocky\"}\n        ] },\n        $currentDate: { \"lastModified\": true }\n    }, function(err, results) {\n    console.log(results);\n    callback();\n});\n};\n\nvar removeFamilies = function(db, callback) {\ndb.collection('families').deleteMany(\n    { \"lastName\": \"Andersen\" },\n    function(err, results) {\n        console.log(results);\n        callback();\n    }\n);\n};\n\nMongoClient.connect(url, function(err, client) {\nassert.equal(null, err);\nvar db = client.db('familiesdb');\ninsertDocument(db, function() {\n    findFamilies(db, function() {\n    updateFamilies(db, function() {\n        removeFamilies(db, function() {\n            client.close();\n        });\n    });\n    });\n});\n});\n\n\n        /*\n        // when component mounted, start a GET request\n        // to specified URL\n        fetch(URL_TO_FETCH)\n        // when we get a response map the body to json\n        .then(response => response.json())\n        // and update the state data to said json\n        .then(data => this.setState({ data }));\n}*/\n\n\n    render() {\n        return (\n            <div>\n                <Header as='h1'>Available flights</Header>\n                <p>Please, select your flight</p>\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>From</Table.HeaderCell>\n                            <Table.HeaderCell>To</Table.HeaderCell>\n                            <Table.HeaderCell>Departure</Table.HeaderCell>\n                            <Table.HeaderCell>Arrival</Table.HeaderCell>\n                            <Table.HeaderCell>Price</Table.HeaderCell>\n\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        { this.state.data.map(function(flight){\n                            return (\n                                <Table.Row key={flight.id}>\n                                    <Table.Cell>{flight.from}</Table.Cell>\n                                    <Table.Cell>{flight.to}</Table.Cell>\n                                    <Table.Cell>{flight.departure}</Table.Cell>\n                                    <Table.Cell>{flight.arrival}</Table.Cell>\n                                    <Table.Cell>{flight.price}</Table.Cell>\n                                </Table.Row>);\n                        }) }\n                    </Table.Body>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default MyFlights"]},"metadata":{},"sourceType":"module"}